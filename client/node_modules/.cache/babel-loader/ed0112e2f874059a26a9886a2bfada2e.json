{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\AIDrawer\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderShape(shape, i) {\n  const {\n    type,\n    x,\n    y,\n    width,\n    height,\n    color\n  } = shape;\n  switch (type) {\n    case \"Rectangle\":\n      return /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this);\n    case \"Square\":\n      return /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: x,\n        y: y,\n        width: width,\n        height: width,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    case \"Circle\":\n      return /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: x + width / 2,\n        cy: y + width / 2,\n        rx: width / 2,\n        ry: width / 2,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    case \"Ellipse\":\n      return /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: x + width / 2,\n        cy: y + height / 2,\n        rx: width / 2,\n        ry: height / 2,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    case \"Line\":\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x,\n        y1: y,\n        x2: x + width,\n        y2: y + height,\n        stroke: color,\n        strokeWidth: \"3\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    case \"Triangle\":\n      return /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `\n            ${x + width / 2},${y}\n            ${x},${y + height}\n            ${x + width},${y + height}\n          `,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    default:\n      return null;\n  }\n}\nexport default function App() {\n  _s();\n  var _canvases$selectedCan, _canvases$selectedCan2, _canvases$selectedCan5, _canvases$selectedCan6;\n  const [canvases, setCanvases] = useState([{\n    id: null,\n    name: \"new canvas\",\n    drawings: [],\n    isLoaded: true\n  }]);\n  const [selectedCanvasIdx, setSelectedCanvasIdx] = useState(0);\n  const currentDrawings = ((_canvases$selectedCan = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan === void 0 ? void 0 : _canvases$selectedCan.drawings) || [];\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [canvasName, setCanvasName] = useState(\"\");\n\n  // useEffect(() => {\n  //   const canvas = canvases[selectedCanvasIdx];\n  //   if (!canvas) return;\n  //   if (canvas.id && !canvas.isLoaded) {\n  //     setLoading(true);\n  //     const loadCanvas = async () => {\n  //       try {\n  //         const res = await fetch(`/api/drawings/${canvas.id}`);\n  //         if (res.ok) {\n  //           const data = await res.json();\n  //           console.log(data.drawings);\n\n  //           setCanvases(prev => prev.map(c =>\n  //             c.id === canvas.id\n  //               ? { ...c, drawings: data.drawings, isLoaded: true }\n  //               : c\n  //           ));\n\n  //         } else {\n  //           alert(\"שגיאה בטעינת הקנבס\");\n  //         }\n  //       } catch (err) {\n  //         alert(\"שגיאה בתקשורת עם השרת\");\n  //       } finally {\n  //         setLoading(false);\n  //       }\n\n  //     };\n  //     loadCanvas();\n  //     console.log(\"selectedCanvasIdx\", selectedCanvasIdx);\n  //     console.log(\"selectedCanvasId\", canvases[selectedCanvasIdx]);\n  //     console.log(\"updatedCanvasId\", canvas.id);\n\n  //   }\n  // }, [selectedCanvasIdx, canvases]);\n\n  useEffect(() => {\n    const canvas = canvases[selectedCanvasIdx];\n    if (!(canvas !== null && canvas !== void 0 && canvas.id) || canvas.isLoaded) return;\n    const loadCanvas = async () => {\n      const res = await fetch(`/api/drawings/${canvas.id}`);\n      const data = await res.json();\n      console.log(\"📦 drawings from server:\", data.drawings);\n      setCanvases(prev => {\n        const next = [...prev];\n        const updatedCanvas = {\n          ...next[selectedCanvasIdx],\n          drawings: data.drawings,\n          isLoaded: true\n        };\n        next[selectedCanvasIdx] = updatedCanvas;\n        return next;\n      });\n    };\n    loadCanvas();\n  }, [selectedCanvasIdx, (_canvases$selectedCan2 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan2 === void 0 ? void 0 : _canvases$selectedCan2.isLoaded]);\n  useEffect(() => {\n    const loadCanvases = async () => {\n      try {\n        const res = await fetch(\"/api/drawings/all-canvases\");\n        if (res.ok) {\n          const data = await res.json();\n          const loadedCanvases = data.map(canvas => ({\n            id: canvas.id,\n            name: canvas.title,\n            drawings: [],\n            isLoaded: false\n          }));\n          setCanvases(prev => [{\n            id: null,\n            name: \"new canvas\",\n            drawings: [],\n            isLoaded: true\n          }, ...loadedCanvases]);\n        } else {\n          alert(\"שגיאה בטעינת הקנבסים\");\n        }\n      } catch (err) {\n        alert(\"שגיאה בתקשורת עם השרת\");\n      }\n    };\n    loadCanvases();\n  }, []);\n  function handleClearDrawing() {\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack([]);\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: []\n      };\n      return next;\n    });\n  }\n  function handleUndo() {\n    if (undoStack.length === 0) return;\n    const stateToRestore = undoStack[undoStack.length - 1];\n    setRedoStack(prev => [currentDrawings, ...prev]);\n    setUndoStack(prev => prev.slice(0, -1));\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: stateToRestore\n      };\n      return next;\n    });\n  }\n  function handleRedo() {\n    if (redoStack.length === 0) return;\n    const stateToRestore = redoStack[0];\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack(prev => prev.slice(1));\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: stateToRestore\n      };\n      return next;\n    });\n  }\n  function handleSave() {\n    var _canvases$selectedCan3, _canvases$selectedCan4;\n    setCanvasName(((_canvases$selectedCan3 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan3 === void 0 ? void 0 : _canvases$selectedCan3.name) === \"new canvas\" ? \"\" : (_canvases$selectedCan4 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan4 === void 0 ? void 0 : _canvases$selectedCan4.name);\n    setShowSaveDialog(true);\n  }\n  async function handleSaveCanvas() {\n    if (!canvasName.trim()) return;\n    setShowSaveDialog(false);\n    try {\n      const response = await fetch(\"/api/drawings/save-canvas\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: canvasName,\n          drawings: currentDrawings\n        })\n      });\n      if (response.ok) {\n        const saved = await response.json();\n        setCanvases(prev => {\n          const newSavedCanvas = {\n            id: saved.id,\n            name: saved.name,\n            drawings: currentDrawings,\n            isLoaded: true\n          };\n          let updatedCanvases = [...prev];\n          const mainCanvasIdx = prev.findIndex(c => c.id === canvases[selectedCanvasIdx].id);\n          if (mainCanvasIdx !== -1) {\n            updatedCanvases[mainCanvasIdx] = newSavedCanvas;\n          } else {\n            updatedCanvases.push(newSavedCanvas);\n          }\n          const newEmptyCanvas = {\n            id: null,\n            name: \"new canvas\",\n            drawings: [],\n            isLoaded: true\n          };\n          updatedCanvases.push(newEmptyCanvas);\n          setSelectedCanvasIdx(updatedCanvases.length - 1);\n          return updatedCanvases;\n        });\n        alert(\"הקנבס נשמר בהצלחה! עובר לקנבס חדש.\");\n      } else {\n        alert(\"שגיאה בשמירת הקנבס\");\n      }\n    } catch (err) {\n      alert(\"שגיאה בתקשורת עם השרת\");\n    }\n  }\n  async function handleSelectCanvas(idx) {\n    setSelectedCanvasIdx(idx);\n    setUndoStack([]);\n    setRedoStack([]);\n    setMessages([]);\n  }\n  async function handleSend() {\n    if (!prompt.trim()) return;\n    setMessages([...messages, {\n      from: \"user\",\n      text: prompt\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch(\"/api/drawings/add-draw\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          existingDrawings: currentDrawings\n        })\n      });\n      if (!response.ok) throw new Error(\"Server error\");\n      const newShapes = await response.json();\n      setUndoStack(prev => [...prev, currentDrawings]);\n      setRedoStack([]);\n      setCanvases(prev => {\n        const next = [...prev];\n        const newDrawing = {\n          description: prompt,\n          shapes: newShapes\n        };\n        const currentCanvas = next[selectedCanvasIdx];\n        next[selectedCanvasIdx] = {\n          ...currentCanvas,\n          drawings: [...currentCanvas.drawings, newDrawing]\n        };\n        return next;\n      });\n      setMessages(msgs => [...msgs, {\n        from: \"bot\",\n        text: \"Drawing added successfully!\"\n      }]);\n      setPrompt(\"\");\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        from: \"bot\",\n        text: \"Error communicating with the server\"\n      }]);\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"canvas-select\",\n        value: selectedCanvasIdx,\n        onChange: e => handleSelectCanvas(Number(e.target.value)),\n        children: canvases.map((canvas, idx) => {\n          var _canvas$id;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: canvas.name\n          }, (_canvas$id = canvas.id) !== null && _canvas$id !== void 0 ? _canvas$id : `new-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn orange\",\n        onClick: handleUndo,\n        disabled: undoStack.length === 0,\n        children: \"undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn purple\",\n        onClick: handleRedo,\n        disabled: redoStack.length === 0,\n        children: \"redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn off-white\",\n        onClick: handleClearDrawing,\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn yellow\",\n        onClick: handleSave,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: \"chat history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-msg ${msg.from}`,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: msg.from === \"user\" ? \"you:\" : \"bot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), \" \", msg.text]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: e => setPrompt(e.target.value),\n            placeholder: \"write a message...\",\n            disabled: loading,\n            onKeyDown: e => e.key === \"Enter\" && handleSend()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            disabled: loading || !prompt.trim(),\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-section\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"600\",\n          height: \"400\",\n          children: (_canvases$selectedCan5 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan5 === void 0 ? void 0 : (_canvases$selectedCan6 = _canvases$selectedCan5.drawings) === null || _canvases$selectedCan6 === void 0 ? void 0 : _canvases$selectedCan6.flatMap((drawing, dIdx) => drawing.shapes.map((shape, i) => renderShape(shape, `${dIdx}-${i}`)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), showSaveDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0,0,0,0.3)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 30,\n          borderRadius: 10,\n          boxShadow: \"0 2px 12px #0002\",\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10,\n            fontWeight: \"bold\"\n          },\n          children: \"canvas name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: canvasName,\n          onChange: e => setCanvasName(e.target.value),\n          placeholder: \"insert canvas name\",\n          style: {\n            width: \"100%\",\n            padding: 8,\n            borderRadius: 6,\n            border: \"1px solid #ccc\",\n            marginBottom: 16\n          },\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 10,\n            justifyContent: \"flex-end\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toolbar-btn green\",\n            onClick: handleSaveCanvas,\n            disabled: !canvasName.trim(),\n            children: \"\\u05E9\\u05DE\\u05D5\\u05E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toolbar-btn orange\",\n            onClick: () => setShowSaveDialog(false),\n            children: \"\\u05D1\\u05D9\\u05D8\\u05D5\\u05DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eooaOH9LdTnoh9MXxxFmEggO45M=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","renderShape","shape","i","type","x","y","width","height","color","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","rx","ry","x1","y1","x2","y2","strokeWidth","points","App","_s","_canvases$selectedCan","_canvases$selectedCan2","_canvases$selectedCan5","_canvases$selectedCan6","canvases","setCanvases","id","name","drawings","isLoaded","selectedCanvasIdx","setSelectedCanvasIdx","currentDrawings","undoStack","setUndoStack","redoStack","setRedoStack","prompt","setPrompt","loading","setLoading","messages","setMessages","showSaveDialog","setShowSaveDialog","canvasName","setCanvasName","canvas","loadCanvas","res","fetch","data","json","console","log","prev","next","updatedCanvas","loadCanvases","ok","loadedCanvases","map","title","alert","err","handleClearDrawing","handleUndo","length","stateToRestore","slice","handleRedo","handleSave","_canvases$selectedCan3","_canvases$selectedCan4","handleSaveCanvas","trim","response","method","headers","body","JSON","stringify","saved","newSavedCanvas","updatedCanvases","mainCanvasIdx","findIndex","c","push","newEmptyCanvas","handleSelectCanvas","idx","handleSend","from","text","existingDrawings","Error","newShapes","newDrawing","description","shapes","currentCanvas","msgs","className","children","value","onChange","e","Number","target","_canvas$id","onClick","disabled","msg","placeholder","onKeyDown","key","flatMap","drawing","dIdx","style","position","top","left","background","display","alignItems","justifyContent","zIndex","padding","borderRadius","boxShadow","minWidth","marginBottom","fontWeight","border","autoFocus","gap","_c","$RefreshReg$"],"sources":["C:/Users/1/פרויקטים/AIDrawer/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction renderShape(shape, i) {\n  const { type, x, y, width, height, color } = shape;\n  switch (type) {\n    case \"Rectangle\":\n      return <rect key={i} x={x} y={y} width={width} height={height} fill={color} stroke=\"#333\" />;\n    case \"Square\":\n      return <rect key={i} x={x} y={y} width={width} height={width} fill={color} stroke=\"#333\" />;\n    case \"Circle\":\n      return (\n        <ellipse\n          key={i}\n          cx={x + width / 2}\n          cy={y + width / 2}\n          rx={width / 2}\n          ry={width / 2}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    case \"Ellipse\":\n      return (\n        <ellipse\n          key={i}\n          cx={x + width / 2}\n          cy={y + height / 2}\n          rx={width / 2}\n          ry={height / 2}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    case \"Line\":\n      return <line key={i} x1={x} y1={y} x2={x + width} y2={y + height} stroke={color} strokeWidth=\"3\" />;\n    case \"Triangle\":\n      return (\n        <polygon\n          key={i}\n          points={`\n            ${x + width / 2},${y}\n            ${x},${y + height}\n            ${x + width},${y + height}\n          `}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nexport default function App() {\n  const [canvases, setCanvases] = useState([\n    { id: null, name: \"new canvas\", drawings: [], isLoaded: true }\n  ]);\n  const [selectedCanvasIdx, setSelectedCanvasIdx] = useState(0);\n  const currentDrawings = canvases[selectedCanvasIdx]?.drawings || [];\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [canvasName, setCanvasName] = useState(\"\");\n\n  // useEffect(() => {\n  //   const canvas = canvases[selectedCanvasIdx];\n  //   if (!canvas) return;\n  //   if (canvas.id && !canvas.isLoaded) {\n  //     setLoading(true);\n  //     const loadCanvas = async () => {\n  //       try {\n  //         const res = await fetch(`/api/drawings/${canvas.id}`);\n  //         if (res.ok) {\n  //           const data = await res.json();\n  //           console.log(data.drawings);\n\n  //           setCanvases(prev => prev.map(c =>\n  //             c.id === canvas.id\n  //               ? { ...c, drawings: data.drawings, isLoaded: true }\n  //               : c\n  //           ));\n\n\n  //         } else {\n  //           alert(\"שגיאה בטעינת הקנבס\");\n  //         }\n  //       } catch (err) {\n  //         alert(\"שגיאה בתקשורת עם השרת\");\n  //       } finally {\n  //         setLoading(false);\n  //       }\n\n  //     };\n  //     loadCanvas();\n  //     console.log(\"selectedCanvasIdx\", selectedCanvasIdx);\n  //     console.log(\"selectedCanvasId\", canvases[selectedCanvasIdx]);\n  //     console.log(\"updatedCanvasId\", canvas.id);\n\n  //   }\n  // }, [selectedCanvasIdx, canvases]);\n\n\n  useEffect(() => {\n    const canvas = canvases[selectedCanvasIdx];\n    if (!canvas?.id || canvas.isLoaded) return;\n\n    const loadCanvas = async () => {\n      const res = await fetch(`/api/drawings/${canvas.id}`);\n      const data = await res.json();\n\n      console.log(\"📦 drawings from server:\", data.drawings);\n\n      setCanvases(prev => {\n        const next = [...prev];\n        const updatedCanvas = {\n          ...next[selectedCanvasIdx],\n          drawings: data.drawings,\n          isLoaded: true,\n        };\n        next[selectedCanvasIdx] = updatedCanvas;\n        return next;\n      });\n    };\n\n    loadCanvas();\n  }, [selectedCanvasIdx, canvases[selectedCanvasIdx]?.isLoaded]);\n\n  useEffect(() => {\n    const loadCanvases = async () => {\n      try {\n        const res = await fetch(\"/api/drawings/all-canvases\");\n        if (res.ok) {\n          const data = await res.json();\n          const loadedCanvases = data.map(canvas => ({\n            id: canvas.id,\n            name: canvas.title,\n            drawings: [],\n            isLoaded: false,\n          }));\n          setCanvases(prev => [{ id: null, name: \"new canvas\", drawings: [], isLoaded: true }, ...loadedCanvases]);\n        } else {\n          alert(\"שגיאה בטעינת הקנבסים\");\n        }\n      } catch (err) {\n        alert(\"שגיאה בתקשורת עם השרת\");\n      }\n    };\n    loadCanvases();\n  }, []);\n\n  function handleClearDrawing() {\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack([]);\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: [] };\n      return next;\n    });\n  }\n\n  function handleUndo() {\n    if (undoStack.length === 0) return;\n    const stateToRestore = undoStack[undoStack.length - 1];\n\n    setRedoStack(prev => [currentDrawings, ...prev]);\n    setUndoStack(prev => prev.slice(0, -1));\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: stateToRestore };\n      return next;\n    });\n  }\n\n  function handleRedo() {\n    if (redoStack.length === 0) return;\n    const stateToRestore = redoStack[0];\n\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack(prev => prev.slice(1));\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: stateToRestore };\n      return next;\n    });\n  }\n\n  function handleSave() {\n    setCanvasName(canvases[selectedCanvasIdx]?.name === \"new canvas\" ? \"\" : canvases[selectedCanvasIdx]?.name);\n    setShowSaveDialog(true);\n  }\n\n  async function handleSaveCanvas() {\n    if (!canvasName.trim()) return;\n    setShowSaveDialog(false);\n    try {\n      const response = await fetch(\"/api/drawings/save-canvas\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          title: canvasName,\n          drawings: currentDrawings\n        })\n      });\n\n      if (response.ok) {\n        const saved = await response.json();\n\n        setCanvases(prev => {\n          const newSavedCanvas = {\n            id: saved.id,\n            name: saved.name,\n            drawings: currentDrawings,\n            isLoaded: true,\n          };\n\n          let updatedCanvases = [...prev];\n          const mainCanvasIdx = prev.findIndex(c => c.id === canvases[selectedCanvasIdx].id);\n\n          if (mainCanvasIdx !== -1) {\n            updatedCanvases[mainCanvasIdx] = newSavedCanvas;\n          } else {\n            updatedCanvases.push(newSavedCanvas);\n          }\n\n          const newEmptyCanvas = { id: null, name: \"new canvas\", drawings: [], isLoaded: true };\n          updatedCanvases.push(newEmptyCanvas);\n\n          setSelectedCanvasIdx(updatedCanvases.length - 1);\n\n          return updatedCanvases;\n        });\n\n        alert(\"הקנבס נשמר בהצלחה! עובר לקנבס חדש.\");\n      } else {\n        alert(\"שגיאה בשמירת הקנבס\");\n      }\n    } catch (err) {\n      alert(\"שגיאה בתקשורת עם השרת\");\n    }\n  }\n\n  async function handleSelectCanvas(idx) {\n    setSelectedCanvasIdx(idx);\n    setUndoStack([]);\n    setRedoStack([]);\n    setMessages([]);\n  }\n\n  async function handleSend() {\n    if (!prompt.trim()) return;\n    setMessages([...messages, { from: \"user\", text: prompt }]);\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"/api/drawings/add-draw\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          prompt,\n          existingDrawings: currentDrawings\n        })\n      });\n\n      if (!response.ok) throw new Error(\"Server error\");\n\n      const newShapes = await response.json();\n\n      setUndoStack(prev => [...prev, currentDrawings]);\n      setRedoStack([]);\n\n      setCanvases(prev => {\n        const next = [...prev];\n        const newDrawing = { description: prompt, shapes: newShapes };\n        const currentCanvas = next[selectedCanvasIdx];\n        next[selectedCanvasIdx] = {\n          ...currentCanvas,\n          drawings: [...currentCanvas.drawings, newDrawing],\n        };\n        return next;\n      });\n\n      setMessages(msgs => [...msgs, { from: \"bot\", text: \"Drawing added successfully!\" }]);\n      setPrompt(\"\");\n    } catch (err) {\n      setMessages(msgs => [...msgs, { from: \"bot\", text: \"Error communicating with the server\" }]);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"toolbar\">\n        <select className=\"canvas-select\" value={selectedCanvasIdx} onChange={e => handleSelectCanvas(Number(e.target.value))}>\n          {canvases.map((canvas, idx) => (\n            <option key={canvas.id ?? `new-${idx}`} value={idx}>{canvas.name}</option>\n          ))}\n        </select>\n        <button className=\"toolbar-btn orange\" onClick={handleUndo} disabled={undoStack.length === 0}>undo</button>\n        <button className=\"toolbar-btn purple\" onClick={handleRedo} disabled={redoStack.length === 0}>redo</button>\n        <button className=\"toolbar-btn off-white\" onClick={handleClearDrawing}>clear</button>\n        <button className=\"toolbar-btn yellow\" onClick={handleSave}>save</button>\n      </div>\n      <div className=\"main-content\">\n        <div className=\"chat-section\">\n          <div className=\"chat-title\">chat history</div>\n          <div className=\"chat-messages\">\n            {messages.map((msg, i) => (\n              <div key={i} className={`chat-msg ${msg.from}`}>\n                <b>{msg.from === \"user\" ? \"you:\" : \"bot:\"}</b> {msg.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"chat-input-row\">\n            <input\n              type=\"text\"\n              value={prompt}\n              onChange={e => setPrompt(e.target.value)}\n              placeholder=\"write a message...\"\n              disabled={loading}\n              onKeyDown={e => e.key === \"Enter\" && handleSend()}\n            />\n            <button onClick={handleSend} disabled={loading || !prompt.trim()}>send</button>\n          </div>\n        </div>\n        <div className=\"canvas-section\">\n          <svg width=\"600\" height=\"400\">\n            {canvases[selectedCanvasIdx]?.drawings?.flatMap((drawing, dIdx) =>\n              drawing.shapes.map((shape, i) => renderShape(shape, `${dIdx}-${i}`))\n            )}\n          </svg>\n        </div>\n      </div>\n\n      {showSaveDialog && (\n        <div style={{ position: \"fixed\", top: 0, left: 0, width: \"100vw\", height: \"100vh\", background: \"rgba(0,0,0,0.3)\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", zIndex: 1000 }}>\n          <div style={{ background: \"#fff\", padding: 30, borderRadius: 10, boxShadow: \"0 2px 12px #0002\", minWidth: 300 }}>\n            <div style={{ marginBottom: 10, fontWeight: \"bold\" }}>canvas name:</div>\n            <input\n              type=\"text\"\n              value={canvasName}\n              onChange={e => setCanvasName(e.target.value)}\n              placeholder=\"insert canvas name\"\n              style={{ width: \"100%\", padding: 8, borderRadius: 6, border: \"1px solid #ccc\", marginBottom: 16 }}\n              autoFocus\n            />\n            <div style={{ display: \"flex\", gap: 10, justifyContent: \"flex-end\" }}>\n              <button className=\"toolbar-btn green\" onClick={handleSaveCanvas} disabled={!canvasName.trim()}>שמור</button>\n              <button className=\"toolbar-btn orange\" onClick={() => setShowSaveDialog(false)}>ביטול</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,WAAWA,CAACC,KAAK,EAAEC,CAAC,EAAE;EAC7B,MAAM;IAAEC,IAAI;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGP,KAAK;EAClD,QAAQE,IAAI;IACV,KAAK,WAAW;MACd,oBAAOJ,OAAA;QAAcK,CAAC,EAAEA,CAAE;QAACC,CAAC,EAAEA,CAAE;QAACC,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAACE,IAAI,EAAED,KAAM;QAACE,MAAM,EAAC;MAAM,GAAvER,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwE,CAAC;IAC9F,KAAK,QAAQ;MACX,oBAAOf,OAAA;QAAcK,CAAC,EAAEA,CAAE;QAACC,CAAC,EAAEA,CAAE;QAACC,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAED,KAAM;QAACG,IAAI,EAAED,KAAM;QAACE,MAAM,EAAC;MAAM,GAAtER,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuE,CAAC;IAC7F,KAAK,QAAQ;MACX,oBACEf,OAAA;QAEEgB,EAAE,EAAEX,CAAC,GAAGE,KAAK,GAAG,CAAE;QAClBU,EAAE,EAAEX,CAAC,GAAGC,KAAK,GAAG,CAAE;QAClBW,EAAE,EAAEX,KAAK,GAAG,CAAE;QACdY,EAAE,EAAEZ,KAAK,GAAG,CAAE;QACdG,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GANRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CAAC;IAEN,KAAK,SAAS;MACZ,oBACEf,OAAA;QAEEgB,EAAE,EAAEX,CAAC,GAAGE,KAAK,GAAG,CAAE;QAClBU,EAAE,EAAEX,CAAC,GAAGE,MAAM,GAAG,CAAE;QACnBU,EAAE,EAAEX,KAAK,GAAG,CAAE;QACdY,EAAE,EAAEX,MAAM,GAAG,CAAE;QACfE,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GANRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CAAC;IAEN,KAAK,MAAM;MACT,oBAAOf,OAAA;QAAcoB,EAAE,EAAEf,CAAE;QAACgB,EAAE,EAAEf,CAAE;QAACgB,EAAE,EAAEjB,CAAC,GAAGE,KAAM;QAACgB,EAAE,EAAEjB,CAAC,GAAGE,MAAO;QAACG,MAAM,EAAEF,KAAM;QAACe,WAAW,EAAC;MAAG,GAA9ErB,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+E,CAAC;IACrG,KAAK,UAAU;MACb,oBACEf,OAAA;QAEEyB,MAAM,EAAE;AAClB,cAAcpB,CAAC,GAAGE,KAAK,GAAG,CAAC,IAAID,CAAC;AAChC,cAAcD,CAAC,IAAIC,CAAC,GAAGE,MAAM;AAC7B,cAAcH,CAAC,GAAGE,KAAK,IAAID,CAAC,GAAGE,MAAM;AACrC,WAAY;QACFE,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GAPRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CAAC;IAEN;MACE,OAAO,IAAI;EACf;AACF;AAEA,eAAe,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,CACvC;IAAEqC,EAAE,EAAE,IAAI;IAAEC,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAC/D,CAAC;EACF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM2C,eAAe,GAAG,EAAAZ,qBAAA,GAAAI,QAAQ,CAACM,iBAAiB,CAAC,cAAAV,qBAAA,uBAA3BA,qBAAA,CAA6BQ,QAAQ,KAAI,EAAE;EACnE,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgD,MAAM,EAAEC,SAAS,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkD,OAAO,EAAEC,UAAU,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoD,QAAQ,EAAEC,WAAW,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsD,cAAc,EAAEC,iBAAiB,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACwD,UAAU,EAAEC,aAAa,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGAC,SAAS,CAAC,MAAM;IACd,MAAMyD,MAAM,GAAGvB,QAAQ,CAACM,iBAAiB,CAAC;IAC1C,IAAI,EAACiB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAErB,EAAE,KAAIqB,MAAM,CAAClB,QAAQ,EAAE;IAEpC,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiBH,MAAM,CAACrB,EAAE,EAAE,CAAC;MACrD,MAAMyB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAACvB,QAAQ,CAAC;MAEtDH,WAAW,CAAC8B,IAAI,IAAI;QAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;QACtB,MAAME,aAAa,GAAG;UACpB,GAAGD,IAAI,CAAC1B,iBAAiB,CAAC;UAC1BF,QAAQ,EAAEuB,IAAI,CAACvB,QAAQ;UACvBC,QAAQ,EAAE;QACZ,CAAC;QACD2B,IAAI,CAAC1B,iBAAiB,CAAC,GAAG2B,aAAa;QACvC,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAAClB,iBAAiB,GAAAT,sBAAA,GAAEG,QAAQ,CAACM,iBAAiB,CAAC,cAAAT,sBAAA,uBAA3BA,sBAAA,CAA6BQ,QAAQ,CAAC,CAAC;EAE9DvC,SAAS,CAAC,MAAM;IACd,MAAMoE,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QACrD,IAAID,GAAG,CAACU,EAAE,EAAE;UACV,MAAMR,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;UAC7B,MAAMQ,cAAc,GAAGT,IAAI,CAACU,GAAG,CAACd,MAAM,KAAK;YACzCrB,EAAE,EAAEqB,MAAM,CAACrB,EAAE;YACbC,IAAI,EAAEoB,MAAM,CAACe,KAAK;YAClBlC,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE;UACZ,CAAC,CAAC,CAAC;UACHJ,WAAW,CAAC8B,IAAI,IAAI,CAAC;YAAE7B,EAAE,EAAE,IAAI;YAAEC,IAAI,EAAE,YAAY;YAAEC,QAAQ,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAK,CAAC,EAAE,GAAG+B,cAAc,CAAC,CAAC;QAC1G,CAAC,MAAM;UACLG,KAAK,CAAC,sBAAsB,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZD,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC;IACDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASO,kBAAkBA,CAAA,EAAG;IAC5B/B,YAAY,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEvB,eAAe,CAAC,CAAC;IAChDI,YAAY,CAAC,EAAE,CAAC;IAEhBX,WAAW,CAAC8B,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAAC1B,iBAAiB,CAAC,GAAG;QAAE,GAAG0B,IAAI,CAAC1B,iBAAiB,CAAC;QAAEF,QAAQ,EAAE;MAAG,CAAC;MACtE,OAAO4B,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASU,UAAUA,CAAA,EAAG;IACpB,IAAIjC,SAAS,CAACkC,MAAM,KAAK,CAAC,EAAE;IAC5B,MAAMC,cAAc,GAAGnC,SAAS,CAACA,SAAS,CAACkC,MAAM,GAAG,CAAC,CAAC;IAEtD/B,YAAY,CAACmB,IAAI,IAAI,CAACvB,eAAe,EAAE,GAAGuB,IAAI,CAAC,CAAC;IAChDrB,YAAY,CAACqB,IAAI,IAAIA,IAAI,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvC5C,WAAW,CAAC8B,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAAC1B,iBAAiB,CAAC,GAAG;QAAE,GAAG0B,IAAI,CAAC1B,iBAAiB,CAAC;QAAEF,QAAQ,EAAEwC;MAAe,CAAC;MAClF,OAAOZ,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASc,UAAUA,CAAA,EAAG;IACpB,IAAInC,SAAS,CAACgC,MAAM,KAAK,CAAC,EAAE;IAC5B,MAAMC,cAAc,GAAGjC,SAAS,CAAC,CAAC,CAAC;IAEnCD,YAAY,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEvB,eAAe,CAAC,CAAC;IAChDI,YAAY,CAACmB,IAAI,IAAIA,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnC5C,WAAW,CAAC8B,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAAC1B,iBAAiB,CAAC,GAAG;QAAE,GAAG0B,IAAI,CAAC1B,iBAAiB,CAAC;QAAEF,QAAQ,EAAEwC;MAAe,CAAC;MAClF,OAAOZ,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASe,UAAUA,CAAA,EAAG;IAAA,IAAAC,sBAAA,EAAAC,sBAAA;IACpB3B,aAAa,CAAC,EAAA0B,sBAAA,GAAAhD,QAAQ,CAACM,iBAAiB,CAAC,cAAA0C,sBAAA,uBAA3BA,sBAAA,CAA6B7C,IAAI,MAAK,YAAY,GAAG,EAAE,IAAA8C,sBAAA,GAAGjD,QAAQ,CAACM,iBAAiB,CAAC,cAAA2C,sBAAA,uBAA3BA,sBAAA,CAA6B9C,IAAI,CAAC;IAC1GiB,iBAAiB,CAAC,IAAI,CAAC;EACzB;EAEA,eAAe8B,gBAAgBA,CAAA,EAAG;IAChC,IAAI,CAAC7B,UAAU,CAAC8B,IAAI,CAAC,CAAC,EAAE;IACxB/B,iBAAiB,CAAC,KAAK,CAAC;IACxB,IAAI;MACF,MAAMgC,QAAQ,GAAG,MAAM1B,KAAK,CAAC,2BAA2B,EAAE;QACxD2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBnB,KAAK,EAAEjB,UAAU;UACjBjB,QAAQ,EAAEI;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAI4C,QAAQ,CAACjB,EAAE,EAAE;QACf,MAAMuB,KAAK,GAAG,MAAMN,QAAQ,CAACxB,IAAI,CAAC,CAAC;QAEnC3B,WAAW,CAAC8B,IAAI,IAAI;UAClB,MAAM4B,cAAc,GAAG;YACrBzD,EAAE,EAAEwD,KAAK,CAACxD,EAAE;YACZC,IAAI,EAAEuD,KAAK,CAACvD,IAAI;YAChBC,QAAQ,EAAEI,eAAe;YACzBH,QAAQ,EAAE;UACZ,CAAC;UAED,IAAIuD,eAAe,GAAG,CAAC,GAAG7B,IAAI,CAAC;UAC/B,MAAM8B,aAAa,GAAG9B,IAAI,CAAC+B,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAC7D,EAAE,KAAKF,QAAQ,CAACM,iBAAiB,CAAC,CAACJ,EAAE,CAAC;UAElF,IAAI2D,aAAa,KAAK,CAAC,CAAC,EAAE;YACxBD,eAAe,CAACC,aAAa,CAAC,GAAGF,cAAc;UACjD,CAAC,MAAM;YACLC,eAAe,CAACI,IAAI,CAACL,cAAc,CAAC;UACtC;UAEA,MAAMM,cAAc,GAAG;YAAE/D,EAAE,EAAE,IAAI;YAAEC,IAAI,EAAE,YAAY;YAAEC,QAAQ,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAK,CAAC;UACrFuD,eAAe,CAACI,IAAI,CAACC,cAAc,CAAC;UAEpC1D,oBAAoB,CAACqD,eAAe,CAACjB,MAAM,GAAG,CAAC,CAAC;UAEhD,OAAOiB,eAAe;QACxB,CAAC,CAAC;QAEFrB,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,MAAM;QACLA,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZD,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF;EAEA,eAAe2B,kBAAkBA,CAACC,GAAG,EAAE;IACrC5D,oBAAoB,CAAC4D,GAAG,CAAC;IACzBzD,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBM,WAAW,CAAC,EAAE,CAAC;EACjB;EAEA,eAAekD,UAAUA,CAAA,EAAG;IAC1B,IAAI,CAACvD,MAAM,CAACsC,IAAI,CAAC,CAAC,EAAE;IACpBjC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEoD,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEzD;IAAO,CAAC,CAAC,CAAC;IAC1DG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMoC,QAAQ,GAAG,MAAM1B,KAAK,CAAC,wBAAwB,EAAE;QACrD2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB5C,MAAM;UACN0D,gBAAgB,EAAE/D;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAAC4C,QAAQ,CAACjB,EAAE,EAAE,MAAM,IAAIqC,KAAK,CAAC,cAAc,CAAC;MAEjD,MAAMC,SAAS,GAAG,MAAMrB,QAAQ,CAACxB,IAAI,CAAC,CAAC;MAEvClB,YAAY,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEvB,eAAe,CAAC,CAAC;MAChDI,YAAY,CAAC,EAAE,CAAC;MAEhBX,WAAW,CAAC8B,IAAI,IAAI;QAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;QACtB,MAAM2C,UAAU,GAAG;UAAEC,WAAW,EAAE9D,MAAM;UAAE+D,MAAM,EAAEH;QAAU,CAAC;QAC7D,MAAMI,aAAa,GAAG7C,IAAI,CAAC1B,iBAAiB,CAAC;QAC7C0B,IAAI,CAAC1B,iBAAiB,CAAC,GAAG;UACxB,GAAGuE,aAAa;UAChBzE,QAAQ,EAAE,CAAC,GAAGyE,aAAa,CAACzE,QAAQ,EAAEsE,UAAU;QAClD,CAAC;QACD,OAAO1C,IAAI;MACb,CAAC,CAAC;MAEFd,WAAW,CAAC4D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAET,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAA8B,CAAC,CAAC,CAAC;MACpFxD,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAO0B,GAAG,EAAE;MACZtB,WAAW,CAAC4D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAET,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAsC,CAAC,CAAC,CAAC;IAC9F;IACAtD,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,oBACEhD,OAAA;IAAK+G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhH,OAAA;MAAK+G,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBhH,OAAA;QAAQ+G,SAAS,EAAC,eAAe;QAACE,KAAK,EAAE3E,iBAAkB;QAAC4E,QAAQ,EAAEC,CAAC,IAAIjB,kBAAkB,CAACkB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAAAD,QAAA,EACnHhF,QAAQ,CAACqC,GAAG,CAAC,CAACd,MAAM,EAAE4C,GAAG;UAAA,IAAAmB,UAAA;UAAA,oBACxBtH,OAAA;YAAwCiH,KAAK,EAAEd,GAAI;YAAAa,QAAA,EAAEzD,MAAM,CAACpB;UAAI,IAAAmF,UAAA,GAAnD/D,MAAM,CAACrB,EAAE,cAAAoF,UAAA,cAAAA,UAAA,GAAI,OAAOnB,GAAG,EAAE;YAAAvF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmC,CAAC;QAAA,CAC3E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTf,OAAA;QAAQ+G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAE7C,UAAW;QAAC8C,QAAQ,EAAE/E,SAAS,CAACkC,MAAM,KAAK,CAAE;QAAAqC,QAAA,EAAC;MAAI;QAAApG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Gf,OAAA;QAAQ+G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAEzC,UAAW;QAAC0C,QAAQ,EAAE7E,SAAS,CAACgC,MAAM,KAAK,CAAE;QAAAqC,QAAA,EAAC;MAAI;QAAApG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Gf,OAAA;QAAQ+G,SAAS,EAAC,uBAAuB;QAACQ,OAAO,EAAE9C,kBAAmB;QAAAuC,QAAA,EAAC;MAAK;QAAApG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFf,OAAA;QAAQ+G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAExC,UAAW;QAAAiC,QAAA,EAAC;MAAI;QAAApG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACNf,OAAA;MAAK+G,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhH,OAAA;QAAK+G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BhH,OAAA;UAAK+G,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAY;UAAApG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9Cf,OAAA;UAAK+G,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3B/D,QAAQ,CAACoB,GAAG,CAAC,CAACoD,GAAG,EAAEtH,CAAC,kBACnBH,OAAA;YAAa+G,SAAS,EAAE,YAAYU,GAAG,CAACpB,IAAI,EAAG;YAAAW,QAAA,gBAC7ChH,OAAA;cAAAgH,QAAA,EAAIS,GAAG,CAACpB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;YAAM;cAAAzF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,KAAC,EAAC0G,GAAG,CAACnB,IAAI;UAAA,GADhDnG,CAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNf,OAAA;UAAK+G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BhH,OAAA;YACEI,IAAI,EAAC,MAAM;YACX6G,KAAK,EAAEpE,MAAO;YACdqE,QAAQ,EAAEC,CAAC,IAAIrE,SAAS,CAACqE,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;YACzCS,WAAW,EAAC,oBAAoB;YAChCF,QAAQ,EAAEzE,OAAQ;YAClB4E,SAAS,EAAER,CAAC,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,IAAIxB,UAAU,CAAC;UAAE;YAAAxF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACFf,OAAA;YAAQuH,OAAO,EAAEnB,UAAW;YAACoB,QAAQ,EAAEzE,OAAO,IAAI,CAACF,MAAM,CAACsC,IAAI,CAAC,CAAE;YAAA6B,QAAA,EAAC;UAAI;YAAApG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNf,OAAA;QAAK+G,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BhH,OAAA;UAAKO,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,KAAK;UAAAwG,QAAA,GAAAlF,sBAAA,GAC1BE,QAAQ,CAACM,iBAAiB,CAAC,cAAAR,sBAAA,wBAAAC,sBAAA,GAA3BD,sBAAA,CAA6BM,QAAQ,cAAAL,sBAAA,uBAArCA,sBAAA,CAAuC8F,OAAO,CAAC,CAACC,OAAO,EAAEC,IAAI,KAC5DD,OAAO,CAAClB,MAAM,CAACvC,GAAG,CAAC,CAACnE,KAAK,EAAEC,CAAC,KAAKF,WAAW,CAACC,KAAK,EAAE,GAAG6H,IAAI,IAAI5H,CAAC,EAAE,CAAC,CACrE;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELoC,cAAc,iBACbnD,OAAA;MAAKgI,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAE5H,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAE4H,UAAU,EAAE,iBAAiB;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAxB,QAAA,eAChMhH,OAAA;QAAKgI,KAAK,EAAE;UAAEI,UAAU,EAAE,MAAM;UAAEK,OAAO,EAAE,EAAE;UAAEC,YAAY,EAAE,EAAE;UAAEC,SAAS,EAAE,kBAAkB;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAA5B,QAAA,gBAC9GhH,OAAA;UAAKgI,KAAK,EAAE;YAAEa,YAAY,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAA9B,QAAA,EAAC;QAAY;UAAApG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxEf,OAAA;UACEI,IAAI,EAAC,MAAM;UACX6G,KAAK,EAAE5D,UAAW;UAClB6D,QAAQ,EAAEC,CAAC,IAAI7D,aAAa,CAAC6D,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;UAC7CS,WAAW,EAAC,oBAAoB;UAChCM,KAAK,EAAE;YAAEzH,KAAK,EAAE,MAAM;YAAEkI,OAAO,EAAE,CAAC;YAAEC,YAAY,EAAE,CAAC;YAAEK,MAAM,EAAE,gBAAgB;YAAEF,YAAY,EAAE;UAAG,CAAE;UAClGG,SAAS;QAAA;UAAApI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFf,OAAA;UAAKgI,KAAK,EAAE;YAAEK,OAAO,EAAE,MAAM;YAAEY,GAAG,EAAE,EAAE;YAAEV,cAAc,EAAE;UAAW,CAAE;UAAAvB,QAAA,gBACnEhH,OAAA;YAAQ+G,SAAS,EAAC,mBAAmB;YAACQ,OAAO,EAAErC,gBAAiB;YAACsC,QAAQ,EAAE,CAACnE,UAAU,CAAC8B,IAAI,CAAC,CAAE;YAAA6B,QAAA,EAAC;UAAI;YAAApG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5Gf,OAAA;YAAQ+G,SAAS,EAAC,oBAAoB;YAACQ,OAAO,EAAEA,CAAA,KAAMnE,iBAAiB,CAAC,KAAK,CAAE;YAAA4D,QAAA,EAAC;UAAK;YAAApG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACY,EAAA,CAnTuBD,GAAG;AAAAwH,EAAA,GAAHxH,GAAG;AAAA,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}