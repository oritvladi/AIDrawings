{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\AIDrawer\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderShape(shape, i) {\n  const {\n    type,\n    x,\n    y,\n    width,\n    height,\n    color\n  } = shape;\n  switch (type) {\n    case \"Rectangle\":\n      return /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this);\n    case \"Square\":\n      return /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: x,\n        y: y,\n        width: width,\n        height: width,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    case \"Circle\":\n      return /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: x + width / 2,\n        cy: y + width / 2,\n        rx: width / 2,\n        ry: width / 2,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    case \"Ellipse\":\n      return /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: x + width / 2,\n        cy: y + height / 2,\n        rx: width / 2,\n        ry: height / 2,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    case \"Line\":\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: x,\n        y1: y,\n        x2: x + width,\n        y2: y + height,\n        stroke: color,\n        strokeWidth: \"3\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    case \"Triangle\":\n      return /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `\n            ${x + width / 2},${y}\n            ${x},${y + height}\n            ${x + width},${y + height}\n          `,\n        fill: color,\n        stroke: \"#333\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    default:\n      return null;\n  }\n}\nexport default function App() {\n  _s();\n  var _canvases$selectedCan;\n  const [canvases, setCanvases] = useState([]);\n  const [selectedCanvasIdx, setSelectedCanvasIdx] = useState(0);\n  const currentDrawings = ((_canvases$selectedCan = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan === void 0 ? void 0 : _canvases$selectedCan.drawings) || [];\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [canvasName, setCanvasName] = useState(\"\");\n  useEffect(() => {\n    const fetchAllCanvases = async () => {\n      try {\n        const res = await fetch(\"/api/drawings/all-canvases\");\n        if (res.ok) {\n          const data = await res.json();\n          const loadedCanvases = data.map(canvas => ({\n            id: canvas.id,\n            name: canvas.title,\n            drawings: [],\n            isLoaded: false\n          }));\n          const newEmptyCanvas = {\n            id: null,\n            name: \"new canvas\",\n            drawings: [],\n            isLoaded: true\n          };\n          setCanvases([...loadedCanvases, newEmptyCanvas]);\n          if (loadedCanvases.length > 0) {\n            setSelectedCanvasIdx(0);\n          } else {\n            setSelectedCanvasIdx(0);\n          }\n        } else {\n          alert(\"שגיאה בטעינת רשימת הקנבסים מהשרת.\");\n        }\n      } catch (err) {\n        alert(\"שגיאה בתקשורת עם השרת בעת טעינת רשימת הקנבסים.\");\n      }\n    };\n    fetchAllCanvases();\n  }, []);\n  useEffect(() => {\n    const canvas = canvases[selectedCanvasIdx];\n    if (!canvas) return;\n    if (canvas.id && !canvas.isLoaded) {\n      setLoading(true);\n      const loadCanvas = async () => {\n        try {\n          const res = await fetch(`/api/drawings/${canvas.id}`);\n          if (res.ok) {\n            const data = await res.json();\n            setCanvases(prev => {\n              const next = [...prev];\n              next[selectedCanvasIdx] = {\n                ...next[selectedCanvasIdx],\n                drawings: data.drawings,\n                isLoaded: true\n              };\n              return next;\n            });\n          } else {\n            alert(\"שגיאה בטעינת הקנבס\");\n          }\n        } catch (err) {\n          alert(\"שגיאה בתקשורת עם השרת\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadCanvas();\n    }\n  }, [selectedCanvasIdx, canvases]);\n  useEffect(() => {\n    setUndoStack([]);\n    setRedoStack([]);\n    setMessages([]);\n  }, [selectedCanvasIdx]);\n  function handleClearDrawing() {\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack([]);\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: []\n      };\n      return next;\n    });\n  }\n  function handleUndo() {\n    if (undoStack.length === 0) return;\n    const stateToRestore = undoStack[undoStack.length - 1];\n    setRedoStack(prev => [currentDrawings, ...prev]);\n    setUndoStack(prev => prev.slice(0, -1));\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: stateToRestore\n      };\n      return next;\n    });\n  }\n  function handleRedo() {\n    if (redoStack.length === 0) return;\n    const stateToRestore = redoStack[0];\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack(prev => prev.slice(1));\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = {\n        ...next[selectedCanvasIdx],\n        drawings: stateToRestore\n      };\n      return next;\n    });\n  }\n  function handleSave() {\n    var _canvases$selectedCan2, _canvases$selectedCan3;\n    setCanvasName(((_canvases$selectedCan2 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan2 === void 0 ? void 0 : _canvases$selectedCan2.name) === \"new canvas\" ? \"\" : (_canvases$selectedCan3 = canvases[selectedCanvasIdx]) === null || _canvases$selectedCan3 === void 0 ? void 0 : _canvases$selectedCan3.name);\n    setShowSaveDialog(true);\n  }\n  async function handleSaveCanvas() {\n    if (!canvasName.trim()) return;\n    setShowSaveDialog(false);\n    try {\n      const response = await fetch(\"/api/drawings/save-canvas\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: canvasName,\n          drawings: currentDrawings\n        })\n      });\n      if (response.ok) {\n        const saved = await response.json();\n        setCanvases(prev => {\n          const newSavedCanvas = {\n            id: saved.id,\n            name: saved.name,\n            drawings: currentDrawings,\n            isLoaded: true\n          };\n          let updatedCanvases = [...prev];\n          const mainCanvasIdx = prev.findIndex(c => c.id === canvases[selectedCanvasIdx].id);\n          if (mainCanvasIdx !== -1) {\n            updatedCanvases[mainCanvasIdx] = newSavedCanvas;\n          } else {\n            updatedCanvases.push(newSavedCanvas);\n          }\n          const newEmptyCanvas = {\n            id: null,\n            name: \"new canvas\",\n            drawings: [],\n            isLoaded: true\n          };\n          if (!updatedCanvases.some(c => c.id === null)) {\n            updatedCanvases.push(newEmptyCanvas);\n          }\n          let newSelectedIdx = updatedCanvases.findIndex(c => c.id === saved.id);\n          if (newSelectedIdx !== -1) {\n            setSelectedCanvasIdx(newSelectedIdx);\n          } else {\n            setSelectedCanvasIdx(updatedCanvases.length - 1);\n          }\n          return updatedCanvases;\n        });\n        alert(\"הקנבס נשמר בהצלחה! עובר לקנבס חדש.\");\n      } else {\n        alert(\"שגיאה בשמירת הקנבס\");\n      }\n    } catch (err) {\n      alert(\"שגיאה בתקשורת עם השרת\");\n    }\n  }\n  async function handleSelectCanvas(idx) {\n    setSelectedCanvasIdx(idx);\n  }\n  async function handleSend() {\n    if (!prompt.trim()) return;\n    setMessages([...messages, {\n      from: \"user\",\n      text: prompt\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch(\"/api/drawings/add-draw\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          existingDrawings: currentDrawings\n        })\n      });\n      if (!response.ok) throw new Error(\"Server error\");\n      const newShapes = await response.json();\n      setUndoStack(prev => [...prev, currentDrawings]);\n      setRedoStack([]);\n      setCanvases(prev => {\n        const next = [...prev];\n        const newDrawing = {\n          description: prompt,\n          shapes: newShapes\n        };\n        const currentCanvas = next[selectedCanvasIdx];\n        next[selectedCanvasIdx] = {\n          ...currentCanvas,\n          drawings: [...currentCanvas.drawings, newDrawing]\n        };\n        return next;\n      });\n      setMessages(msgs => [...msgs, {\n        from: \"bot\",\n        text: \"Drawing added successfully!\"\n      }]);\n      setPrompt(\"\");\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        from: \"bot\",\n        text: \"Error communicating with the server\"\n      }]);\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"canvas-select\",\n        value: selectedCanvasIdx,\n        onChange: e => handleSelectCanvas(Number(e.target.value)),\n        children: canvases.map((canvas, idx) => {\n          var _canvas$id;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: canvas.name\n          }, (_canvas$id = canvas.id) !== null && _canvas$id !== void 0 ? _canvas$id : `new-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn orange\",\n        onClick: handleUndo,\n        disabled: undoStack.length === 0,\n        children: \"undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn purple\",\n        onClick: handleRedo,\n        disabled: redoStack.length === 0,\n        children: \"redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn off-white\",\n        onClick: handleClearDrawing,\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbar-btn yellow\",\n        onClick: handleSave,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: \"chat history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-msg ${msg.from}`,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: msg.from === \"user\" ? \"you:\" : \"bot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), \" \", msg.text]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: prompt,\n            onChange: e => setPrompt(e.target.value),\n            placeholder: \"write a message...\",\n            disabled: loading,\n            onKeyDown: e => e.key === \"Enter\" && handleSend()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            disabled: loading || !prompt.trim(),\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-section\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: \"\\u05DE\\u05E6\\u05D9\\u05D9\\u05E8 \\u05DC\\u05DA...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 23\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"600\",\n          height: \"400\",\n          children: currentDrawings.flatMap((drawing, dIdx) => drawing.shapes.map((shape, i) => renderShape(shape, `${dIdx}-${i}`)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), showSaveDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0,0,0,0.3)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 30,\n          borderRadius: 10,\n          boxShadow: \"0 2px 12px #0002\",\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10,\n            fontWeight: \"bold\"\n          },\n          children: \"canvas name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: canvasName,\n          onChange: e => setCanvasName(e.target.value),\n          placeholder: \"insert canvas name\",\n          style: {\n            width: \"100%\",\n            padding: 8,\n            borderRadius: 6,\n            border: \"1px solid #ccc\",\n            marginBottom: 16\n          },\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 10,\n            justifyContent: \"flex-end\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toolbar-btn green\",\n            onClick: handleSaveCanvas,\n            disabled: !canvasName.trim(),\n            children: \"\\u05E9\\u05DE\\u05D5\\u05E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toolbar-btn orange\",\n            onClick: () => setShowSaveDialog(false),\n            children: \"\\u05D1\\u05D9\\u05D8\\u05D5\\u05DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"estHwQCpNkFOSlXWM5gIn29bmwE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","renderShape","shape","i","type","x","y","width","height","color","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","rx","ry","x1","y1","x2","y2","strokeWidth","points","App","_s","_canvases$selectedCan","canvases","setCanvases","selectedCanvasIdx","setSelectedCanvasIdx","currentDrawings","drawings","undoStack","setUndoStack","redoStack","setRedoStack","prompt","setPrompt","loading","setLoading","messages","setMessages","showSaveDialog","setShowSaveDialog","canvasName","setCanvasName","fetchAllCanvases","res","fetch","ok","data","json","loadedCanvases","map","canvas","id","name","title","isLoaded","newEmptyCanvas","length","alert","err","loadCanvas","prev","next","handleClearDrawing","handleUndo","stateToRestore","slice","handleRedo","handleSave","_canvases$selectedCan2","_canvases$selectedCan3","handleSaveCanvas","trim","response","method","headers","body","JSON","stringify","saved","newSavedCanvas","updatedCanvases","mainCanvasIdx","findIndex","c","push","some","newSelectedIdx","handleSelectCanvas","idx","handleSend","from","text","existingDrawings","Error","newShapes","newDrawing","description","shapes","currentCanvas","msgs","className","children","value","onChange","e","Number","target","_canvas$id","onClick","disabled","msg","placeholder","onKeyDown","key","flatMap","drawing","dIdx","style","position","top","left","background","display","alignItems","justifyContent","zIndex","padding","borderRadius","boxShadow","minWidth","marginBottom","fontWeight","border","autoFocus","gap","_c","$RefreshReg$"],"sources":["C:/Users/1/פרויקטים/AIDrawer/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction renderShape(shape, i) {\n  const { type, x, y, width, height, color } = shape;\n  switch (type) {\n    case \"Rectangle\":\n      return <rect key={i} x={x} y={y} width={width} height={height} fill={color} stroke=\"#333\" />;\n    case \"Square\":\n      return <rect key={i} x={x} y={y} width={width} height={width} fill={color} stroke=\"#333\" />;\n    case \"Circle\":\n      return (\n        <ellipse\n          key={i}\n          cx={x + width / 2}\n          cy={y + width / 2}\n          rx={width / 2}\n          ry={width / 2}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    case \"Ellipse\":\n      return (\n        <ellipse\n          key={i}\n          cx={x + width / 2}\n          cy={y + height / 2}\n          rx={width / 2}\n          ry={height / 2}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    case \"Line\":\n      return <line key={i} x1={x} y1={y} x2={x + width} y2={y + height} stroke={color} strokeWidth=\"3\" />;\n    case \"Triangle\":\n      return (\n        <polygon\n          key={i}\n          points={`\n            ${x + width / 2},${y}\n            ${x},${y + height}\n            ${x + width},${y + height}\n          `}\n          fill={color}\n          stroke=\"#333\"\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nexport default function App() {\n  const [canvases, setCanvases] = useState([]);\n  const [selectedCanvasIdx, setSelectedCanvasIdx] = useState(0);\n  const currentDrawings = canvases[selectedCanvasIdx]?.drawings || [];\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const [prompt, setPrompt] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  const [canvasName, setCanvasName] = useState(\"\");\n\n  useEffect(() => {\n    const fetchAllCanvases = async () => {\n      try {\n        const res = await fetch(\"/api/drawings/all-canvases\");\n        if (res.ok) {\n          const data = await res.json();\n          const loadedCanvases = data.map(canvas => ({\n            id: canvas.id,\n            name: canvas.title,\n            drawings: [],\n            isLoaded: false,\n          }));\n\n          const newEmptyCanvas = { id: null, name: \"new canvas\", drawings: [], isLoaded: true };\n          setCanvases([...loadedCanvases, newEmptyCanvas]);\n\n          if (loadedCanvases.length > 0) {\n            setSelectedCanvasIdx(0);\n          } else {\n            setSelectedCanvasIdx(0);\n          }\n        } else {\n          alert(\"שגיאה בטעינת רשימת הקנבסים מהשרת.\");\n        }\n      } catch (err) {\n        alert(\"שגיאה בתקשורת עם השרת בעת טעינת רשימת הקנבסים.\");\n      }\n    };\n\n    fetchAllCanvases();\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvases[selectedCanvasIdx];\n    if (!canvas) return;\n    if (canvas.id && !canvas.isLoaded) {\n      setLoading(true);\n      const loadCanvas = async () => {\n        try {\n          const res = await fetch(`/api/drawings/${canvas.id}`);\n          if (res.ok) {\n            const data = await res.json();\n            setCanvases(prev => {\n              const next = [...prev];\n              next[selectedCanvasIdx] = {\n                ...next[selectedCanvasIdx],\n                drawings: data.drawings,\n                isLoaded: true,\n              };\n              return next;\n            });\n          } else {\n            alert(\"שגיאה בטעינת הקנבס\");\n          }\n        } catch (err) {\n          alert(\"שגיאה בתקשורת עם השרת\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadCanvas();\n    }\n  }, [selectedCanvasIdx, canvases]);\n\n  useEffect(() => {\n    setUndoStack([]);\n    setRedoStack([]);\n    setMessages([]);\n  }, [selectedCanvasIdx]);\n\n  function handleClearDrawing() {\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack([]);\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: [] };\n      return next;\n    });\n  }\n\n  function handleUndo() {\n    if (undoStack.length === 0) return;\n    const stateToRestore = undoStack[undoStack.length - 1];\n\n    setRedoStack(prev => [currentDrawings, ...prev]);\n    setUndoStack(prev => prev.slice(0, -1));\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: stateToRestore };\n      return next;\n    });\n  }\n\n  function handleRedo() {\n    if (redoStack.length === 0) return;\n    const stateToRestore = redoStack[0];\n\n    setUndoStack(prev => [...prev, currentDrawings]);\n    setRedoStack(prev => prev.slice(1));\n\n    setCanvases(prev => {\n      const next = [...prev];\n      next[selectedCanvasIdx] = { ...next[selectedCanvasIdx], drawings: stateToRestore };\n      return next;\n    });\n  }\n\n  function handleSave() {\n    setCanvasName(canvases[selectedCanvasIdx]?.name === \"new canvas\" ? \"\" : canvases[selectedCanvasIdx]?.name);\n    setShowSaveDialog(true);\n  }\n\n  async function handleSaveCanvas() {\n    if (!canvasName.trim()) return;\n    setShowSaveDialog(false);\n    try {\n      const response = await fetch(\"/api/drawings/save-canvas\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          title: canvasName,\n          drawings: currentDrawings\n        })\n      });\n\n      if (response.ok) {\n        const saved = await response.json();\n\n        setCanvases(prev => {\n          const newSavedCanvas = {\n            id: saved.id,\n            name: saved.name,\n            drawings: currentDrawings,\n            isLoaded: true,\n          };\n\n          let updatedCanvases = [...prev];\n          const mainCanvasIdx = prev.findIndex(c => c.id === canvases[selectedCanvasIdx].id);\n\n          if (mainCanvasIdx !== -1) {\n            updatedCanvases[mainCanvasIdx] = newSavedCanvas;\n          } else {\n            updatedCanvases.push(newSavedCanvas);\n          }\n\n          const newEmptyCanvas = { id: null, name: \"new canvas\", drawings: [], isLoaded: true };\n          if (!updatedCanvases.some(c => c.id === null)) {\n            updatedCanvases.push(newEmptyCanvas);\n          }\n\n          let newSelectedIdx = updatedCanvases.findIndex(c => c.id === saved.id);\n          if (newSelectedIdx !== -1) {\n            setSelectedCanvasIdx(newSelectedIdx);\n          } else {\n            setSelectedCanvasIdx(updatedCanvases.length - 1);\n          }\n\n          return updatedCanvases;\n        });\n\n        alert(\"הקנבס נשמר בהצלחה! עובר לקנבס חדש.\");\n      } else {\n        alert(\"שגיאה בשמירת הקנבס\");\n      }\n    } catch (err) {\n      alert(\"שגיאה בתקשורת עם השרת\");\n    }\n  }\n\n  async function handleSelectCanvas(idx) {\n    setSelectedCanvasIdx(idx);\n  }\n\n  async function handleSend() {\n    if (!prompt.trim()) return;\n    setMessages([...messages, { from: \"user\", text: prompt }]);\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"/api/drawings/add-draw\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          prompt,\n          existingDrawings: currentDrawings\n        })\n      });\n\n      if (!response.ok) throw new Error(\"Server error\");\n\n      const newShapes = await response.json();\n\n      setUndoStack(prev => [...prev, currentDrawings]);\n      setRedoStack([]);\n\n      setCanvases(prev => {\n        const next = [...prev];\n        const newDrawing = { description: prompt, shapes: newShapes };\n        const currentCanvas = next[selectedCanvasIdx];\n        next[selectedCanvasIdx] = {\n          ...currentCanvas,\n          drawings: [...currentCanvas.drawings, newDrawing],\n        };\n        return next;\n      });\n\n      setMessages(msgs => [...msgs, { from: \"bot\", text: \"Drawing added successfully!\" }]);\n      setPrompt(\"\");\n    } catch (err) {\n      setMessages(msgs => [...msgs, { from: \"bot\", text: \"Error communicating with the server\" }]);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"toolbar\">\n        <select className=\"canvas-select\" value={selectedCanvasIdx} onChange={e => handleSelectCanvas(Number(e.target.value))}>\n          {canvases.map((canvas, idx) => (\n            <option key={canvas.id ?? `new-${idx}`} value={idx}>{canvas.name}</option>\n          ))}\n        </select>\n        <button className=\"toolbar-btn orange\" onClick={handleUndo} disabled={undoStack.length === 0}>undo</button>\n        <button className=\"toolbar-btn purple\" onClick={handleRedo} disabled={redoStack.length === 0}>redo</button>\n        <button className=\"toolbar-btn off-white\" onClick={handleClearDrawing}>clear</button>\n        <button className=\"toolbar-btn yellow\" onClick={handleSave}>save</button>\n      </div>\n      <div className=\"main-content\">\n        <div className=\"chat-section\">\n          <div className=\"chat-title\">chat history</div>\n          <div className=\"chat-messages\">\n            {messages.map((msg, i) => (\n              <div key={i} className={`chat-msg ${msg.from}`}>\n                <b>{msg.from === \"user\" ? \"you:\" : \"bot:\"}</b> {msg.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"chat-input-row\">\n            <input\n              type=\"text\"\n              value={prompt}\n              onChange={e => setPrompt(e.target.value)}\n              placeholder=\"write a message...\"\n              disabled={loading}\n              onKeyDown={e => e.key === \"Enter\" && handleSend()}\n            />\n            <button onClick={handleSend} disabled={loading || !prompt.trim()}>send</button>\n          </div>\n        </div>\n        <div className=\"canvas-section\">\n          {loading && <div className=\"loading-indicator\">מצייר לך...</div>} {/* הוסף את זה כאן */}\n          <svg width=\"600\" height=\"400\">\n            {currentDrawings.flatMap((drawing, dIdx) =>\n              drawing.shapes.map((shape, i) => renderShape(shape, `${dIdx}-${i}`))\n            )}\n          </svg>\n        </div>\n      </div>\n\n      {showSaveDialog && (\n        <div style={{ position: \"fixed\", top: 0, left: 0, width: \"100vw\", height: \"100vh\", background: \"rgba(0,0,0,0.3)\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", zIndex: 1000 }}>\n          <div style={{ background: \"#fff\", padding: 30, borderRadius: 10, boxShadow: \"0 2px 12px #0002\", minWidth: 300 }}>\n            <div style={{ marginBottom: 10, fontWeight: \"bold\" }}>canvas name:</div>\n            <input\n              type=\"text\"\n              value={canvasName}\n              onChange={e => setCanvasName(e.target.value)}\n              placeholder=\"insert canvas name\"\n              style={{ width: \"100%\", padding: 8, borderRadius: 6, border: \"1px solid #ccc\", marginBottom: 16 }}\n              autoFocus\n            />\n            <div style={{ display: \"flex\", gap: 10, justifyContent: \"flex-end\" }}>\n              <button className=\"toolbar-btn green\" onClick={handleSaveCanvas} disabled={!canvasName.trim()}>שמור</button>\n              <button className=\"toolbar-btn orange\" onClick={() => setShowSaveDialog(false)}>ביטול</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,WAAWA,CAACC,KAAK,EAAEC,CAAC,EAAE;EAC7B,MAAM;IAAEC,IAAI;IAAEC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGP,KAAK;EAClD,QAAQE,IAAI;IACV,KAAK,WAAW;MACd,oBAAOJ,OAAA;QAAcK,CAAC,EAAEA,CAAE;QAACC,CAAC,EAAEA,CAAE;QAACC,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAACE,IAAI,EAAED,KAAM;QAACE,MAAM,EAAC;MAAM,GAAvER,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwE,CAAC;IAC9F,KAAK,QAAQ;MACX,oBAAOf,OAAA;QAAcK,CAAC,EAAEA,CAAE;QAACC,CAAC,EAAEA,CAAE;QAACC,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAED,KAAM;QAACG,IAAI,EAAED,KAAM;QAACE,MAAM,EAAC;MAAM,GAAtER,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuE,CAAC;IAC7F,KAAK,QAAQ;MACX,oBACEf,OAAA;QAEEgB,EAAE,EAAEX,CAAC,GAAGE,KAAK,GAAG,CAAE;QAClBU,EAAE,EAAEX,CAAC,GAAGC,KAAK,GAAG,CAAE;QAClBW,EAAE,EAAEX,KAAK,GAAG,CAAE;QACdY,EAAE,EAAEZ,KAAK,GAAG,CAAE;QACdG,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GANRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CAAC;IAEN,KAAK,SAAS;MACZ,oBACEf,OAAA;QAEEgB,EAAE,EAAEX,CAAC,GAAGE,KAAK,GAAG,CAAE;QAClBU,EAAE,EAAEX,CAAC,GAAGE,MAAM,GAAG,CAAE;QACnBU,EAAE,EAAEX,KAAK,GAAG,CAAE;QACdY,EAAE,EAAEX,MAAM,GAAG,CAAE;QACfE,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GANRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CAAC;IAEN,KAAK,MAAM;MACT,oBAAOf,OAAA;QAAcoB,EAAE,EAAEf,CAAE;QAACgB,EAAE,EAAEf,CAAE;QAACgB,EAAE,EAAEjB,CAAC,GAAGE,KAAM;QAACgB,EAAE,EAAEjB,CAAC,GAAGE,MAAO;QAACG,MAAM,EAAEF,KAAM;QAACe,WAAW,EAAC;MAAG,GAA9ErB,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+E,CAAC;IACrG,KAAK,UAAU;MACb,oBACEf,OAAA;QAEEyB,MAAM,EAAE;AAClB,cAAcpB,CAAC,GAAGE,KAAK,GAAG,CAAC,IAAID,CAAC;AAChC,cAAcD,CAAC,IAAIC,CAAC,GAAGE,MAAM;AAC7B,cAAcH,CAAC,GAAGE,KAAK,IAAID,CAAC,GAAGE,MAAM;AACrC,WAAY;QACFE,IAAI,EAAED,KAAM;QACZE,MAAM,EAAC;MAAM,GAPRR,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CAAC;IAEN;MACE,OAAO,IAAI;EACf;AACF;AAEA,eAAe,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMoC,eAAe,GAAG,EAAAL,qBAAA,GAAAC,QAAQ,CAACE,iBAAiB,CAAC,cAAAH,qBAAA,uBAA3BA,qBAAA,CAA6BM,QAAQ,KAAI,EAAE;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgD,cAAc,EAAEC,iBAAiB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMmD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QACrD,IAAID,GAAG,CAACE,EAAE,EAAE;UACV,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;UAC7B,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAG,CAACC,MAAM,KAAK;YACzCC,EAAE,EAAED,MAAM,CAACC,EAAE;YACbC,IAAI,EAAEF,MAAM,CAACG,KAAK;YAClB1B,QAAQ,EAAE,EAAE;YACZ2B,QAAQ,EAAE;UACZ,CAAC,CAAC,CAAC;UAEH,MAAMC,cAAc,GAAG;YAAEJ,EAAE,EAAE,IAAI;YAAEC,IAAI,EAAE,YAAY;YAAEzB,QAAQ,EAAE,EAAE;YAAE2B,QAAQ,EAAE;UAAK,CAAC;UACrF/B,WAAW,CAAC,CAAC,GAAGyB,cAAc,EAAEO,cAAc,CAAC,CAAC;UAEhD,IAAIP,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE;YAC7B/B,oBAAoB,CAAC,CAAC,CAAC;UACzB,CAAC,MAAM;YACLA,oBAAoB,CAAC,CAAC,CAAC;UACzB;QACF,CAAC,MAAM;UACLgC,KAAK,CAAC,mCAAmC,CAAC;QAC5C;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZD,KAAK,CAAC,gDAAgD,CAAC;MACzD;IACF,CAAC;IAEDf,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENnD,SAAS,CAAC,MAAM;IACd,MAAM2D,MAAM,GAAG5B,QAAQ,CAACE,iBAAiB,CAAC;IAC1C,IAAI,CAAC0B,MAAM,EAAE;IACb,IAAIA,MAAM,CAACC,EAAE,IAAI,CAACD,MAAM,CAACI,QAAQ,EAAE;MACjCnB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACF,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiBM,MAAM,CAACC,EAAE,EAAE,CAAC;UACrD,IAAIR,GAAG,CAACE,EAAE,EAAE;YACV,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;YAC7BxB,WAAW,CAACqC,IAAI,IAAI;cAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;cACtBC,IAAI,CAACrC,iBAAiB,CAAC,GAAG;gBACxB,GAAGqC,IAAI,CAACrC,iBAAiB,CAAC;gBAC1BG,QAAQ,EAAEmB,IAAI,CAACnB,QAAQ;gBACvB2B,QAAQ,EAAE;cACZ,CAAC;cACD,OAAOO,IAAI;YACb,CAAC,CAAC;UACJ,CAAC,MAAM;YACLJ,KAAK,CAAC,oBAAoB,CAAC;UAC7B;QACF,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZD,KAAK,CAAC,uBAAuB,CAAC;QAChC,CAAC,SAAS;UACRtB,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MACDwB,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACnC,iBAAiB,EAAEF,QAAQ,CAAC,CAAC;EAEjC/B,SAAS,CAAC,MAAM;IACdsC,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,EAAE,CAAC;IAChBM,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC,EAAE,CAACb,iBAAiB,CAAC,CAAC;EAEvB,SAASsC,kBAAkBA,CAAA,EAAG;IAC5BjC,YAAY,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAElC,eAAe,CAAC,CAAC;IAChDK,YAAY,CAAC,EAAE,CAAC;IAEhBR,WAAW,CAACqC,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAACrC,iBAAiB,CAAC,GAAG;QAAE,GAAGqC,IAAI,CAACrC,iBAAiB,CAAC;QAAEG,QAAQ,EAAE;MAAG,CAAC;MACtE,OAAOkC,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASE,UAAUA,CAAA,EAAG;IACpB,IAAInC,SAAS,CAAC4B,MAAM,KAAK,CAAC,EAAE;IAC5B,MAAMQ,cAAc,GAAGpC,SAAS,CAACA,SAAS,CAAC4B,MAAM,GAAG,CAAC,CAAC;IAEtDzB,YAAY,CAAC6B,IAAI,IAAI,CAAClC,eAAe,EAAE,GAAGkC,IAAI,CAAC,CAAC;IAChD/B,YAAY,CAAC+B,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvC1C,WAAW,CAACqC,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAACrC,iBAAiB,CAAC,GAAG;QAAE,GAAGqC,IAAI,CAACrC,iBAAiB,CAAC;QAAEG,QAAQ,EAAEqC;MAAe,CAAC;MAClF,OAAOH,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASK,UAAUA,CAAA,EAAG;IACpB,IAAIpC,SAAS,CAAC0B,MAAM,KAAK,CAAC,EAAE;IAC5B,MAAMQ,cAAc,GAAGlC,SAAS,CAAC,CAAC,CAAC;IAEnCD,YAAY,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAElC,eAAe,CAAC,CAAC;IAChDK,YAAY,CAAC6B,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnC1C,WAAW,CAACqC,IAAI,IAAI;MAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;MACtBC,IAAI,CAACrC,iBAAiB,CAAC,GAAG;QAAE,GAAGqC,IAAI,CAACrC,iBAAiB,CAAC;QAAEG,QAAQ,EAAEqC;MAAe,CAAC;MAClF,OAAOH,IAAI;IACb,CAAC,CAAC;EACJ;EAEA,SAASM,UAAUA,CAAA,EAAG;IAAA,IAAAC,sBAAA,EAAAC,sBAAA;IACpB5B,aAAa,CAAC,EAAA2B,sBAAA,GAAA9C,QAAQ,CAACE,iBAAiB,CAAC,cAAA4C,sBAAA,uBAA3BA,sBAAA,CAA6BhB,IAAI,MAAK,YAAY,GAAG,EAAE,IAAAiB,sBAAA,GAAG/C,QAAQ,CAACE,iBAAiB,CAAC,cAAA6C,sBAAA,uBAA3BA,sBAAA,CAA6BjB,IAAI,CAAC;IAC1Gb,iBAAiB,CAAC,IAAI,CAAC;EACzB;EAEA,eAAe+B,gBAAgBA,CAAA,EAAG;IAChC,IAAI,CAAC9B,UAAU,CAAC+B,IAAI,CAAC,CAAC,EAAE;IACxBhC,iBAAiB,CAAC,KAAK,CAAC;IACxB,IAAI;MACF,MAAMiC,QAAQ,GAAG,MAAM5B,KAAK,CAAC,2BAA2B,EAAE;QACxD6B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBxB,KAAK,EAAEb,UAAU;UACjBb,QAAQ,EAAED;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAI8C,QAAQ,CAAC3B,EAAE,EAAE;QACf,MAAMiC,KAAK,GAAG,MAAMN,QAAQ,CAACzB,IAAI,CAAC,CAAC;QAEnCxB,WAAW,CAACqC,IAAI,IAAI;UAClB,MAAMmB,cAAc,GAAG;YACrB5B,EAAE,EAAE2B,KAAK,CAAC3B,EAAE;YACZC,IAAI,EAAE0B,KAAK,CAAC1B,IAAI;YAChBzB,QAAQ,EAAED,eAAe;YACzB4B,QAAQ,EAAE;UACZ,CAAC;UAED,IAAI0B,eAAe,GAAG,CAAC,GAAGpB,IAAI,CAAC;UAC/B,MAAMqB,aAAa,GAAGrB,IAAI,CAACsB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAK7B,QAAQ,CAACE,iBAAiB,CAAC,CAAC2B,EAAE,CAAC;UAElF,IAAI8B,aAAa,KAAK,CAAC,CAAC,EAAE;YACxBD,eAAe,CAACC,aAAa,CAAC,GAAGF,cAAc;UACjD,CAAC,MAAM;YACLC,eAAe,CAACI,IAAI,CAACL,cAAc,CAAC;UACtC;UAEA,MAAMxB,cAAc,GAAG;YAAEJ,EAAE,EAAE,IAAI;YAAEC,IAAI,EAAE,YAAY;YAAEzB,QAAQ,EAAE,EAAE;YAAE2B,QAAQ,EAAE;UAAK,CAAC;UACrF,IAAI,CAAC0B,eAAe,CAACK,IAAI,CAACF,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAK,IAAI,CAAC,EAAE;YAC7C6B,eAAe,CAACI,IAAI,CAAC7B,cAAc,CAAC;UACtC;UAEA,IAAI+B,cAAc,GAAGN,eAAe,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAK2B,KAAK,CAAC3B,EAAE,CAAC;UACtE,IAAImC,cAAc,KAAK,CAAC,CAAC,EAAE;YACzB7D,oBAAoB,CAAC6D,cAAc,CAAC;UACtC,CAAC,MAAM;YACL7D,oBAAoB,CAACuD,eAAe,CAACxB,MAAM,GAAG,CAAC,CAAC;UAClD;UAEA,OAAOwB,eAAe;QACxB,CAAC,CAAC;QAEFvB,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,MAAM;QACLA,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZD,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF;EAEA,eAAe8B,kBAAkBA,CAACC,GAAG,EAAE;IACrC/D,oBAAoB,CAAC+D,GAAG,CAAC;EAC3B;EAEA,eAAeC,UAAUA,CAAA,EAAG;IAC1B,IAAI,CAACzD,MAAM,CAACuC,IAAI,CAAC,CAAC,EAAE;IACpBlC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEsD,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE3D;IAAO,CAAC,CAAC,CAAC;IAC1DG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMqC,QAAQ,GAAG,MAAM5B,KAAK,CAAC,wBAAwB,EAAE;QACrD6B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB7C,MAAM;UACN4D,gBAAgB,EAAElE;QACpB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAAC8C,QAAQ,CAAC3B,EAAE,EAAE,MAAM,IAAIgD,KAAK,CAAC,cAAc,CAAC;MAEjD,MAAMC,SAAS,GAAG,MAAMtB,QAAQ,CAACzB,IAAI,CAAC,CAAC;MAEvClB,YAAY,CAAC+B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAElC,eAAe,CAAC,CAAC;MAChDK,YAAY,CAAC,EAAE,CAAC;MAEhBR,WAAW,CAACqC,IAAI,IAAI;QAClB,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;QACtB,MAAMmC,UAAU,GAAG;UAAEC,WAAW,EAAEhE,MAAM;UAAEiE,MAAM,EAAEH;QAAU,CAAC;QAC7D,MAAMI,aAAa,GAAGrC,IAAI,CAACrC,iBAAiB,CAAC;QAC7CqC,IAAI,CAACrC,iBAAiB,CAAC,GAAG;UACxB,GAAG0E,aAAa;UAChBvE,QAAQ,EAAE,CAAC,GAAGuE,aAAa,CAACvE,QAAQ,EAAEoE,UAAU;QAClD,CAAC;QACD,OAAOlC,IAAI;MACb,CAAC,CAAC;MAEFxB,WAAW,CAAC8D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAET,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAA8B,CAAC,CAAC,CAAC;MACpF1D,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZrB,WAAW,CAAC8D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAET,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAsC,CAAC,CAAC,CAAC;IAC9F;IACAxD,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,oBACE1C,OAAA;IAAK2G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5G,OAAA;MAAK2G,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB5G,OAAA;QAAQ2G,SAAS,EAAC,eAAe;QAACE,KAAK,EAAE9E,iBAAkB;QAAC+E,QAAQ,EAAEC,CAAC,IAAIjB,kBAAkB,CAACkB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAAAD,QAAA,EACnH/E,QAAQ,CAAC2B,GAAG,CAAC,CAACC,MAAM,EAAEsC,GAAG;UAAA,IAAAmB,UAAA;UAAA,oBACxBlH,OAAA;YAAwC6G,KAAK,EAAEd,GAAI;YAAAa,QAAA,EAAEnD,MAAM,CAACE;UAAI,IAAAuD,UAAA,GAAnDzD,MAAM,CAACC,EAAE,cAAAwD,UAAA,cAAAA,UAAA,GAAI,OAAOnB,GAAG,EAAE;YAAAnF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmC,CAAC;QAAA,CAC3E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTf,OAAA;QAAQ2G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAE7C,UAAW;QAAC8C,QAAQ,EAAEjF,SAAS,CAAC4B,MAAM,KAAK,CAAE;QAAA6C,QAAA,EAAC;MAAI;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Gf,OAAA;QAAQ2G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAE1C,UAAW;QAAC2C,QAAQ,EAAE/E,SAAS,CAAC0B,MAAM,KAAK,CAAE;QAAA6C,QAAA,EAAC;MAAI;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Gf,OAAA;QAAQ2G,SAAS,EAAC,uBAAuB;QAACQ,OAAO,EAAE9C,kBAAmB;QAAAuC,QAAA,EAAC;MAAK;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFf,OAAA;QAAQ2G,SAAS,EAAC,oBAAoB;QAACQ,OAAO,EAAEzC,UAAW;QAAAkC,QAAA,EAAC;MAAI;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACNf,OAAA;MAAK2G,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5G,OAAA;QAAK2G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B5G,OAAA;UAAK2G,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAY;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9Cf,OAAA;UAAK2G,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BjE,QAAQ,CAACa,GAAG,CAAC,CAAC6D,GAAG,EAAElH,CAAC,kBACnBH,OAAA;YAAa2G,SAAS,EAAE,YAAYU,GAAG,CAACpB,IAAI,EAAG;YAAAW,QAAA,gBAC7C5G,OAAA;cAAA4G,QAAA,EAAIS,GAAG,CAACpB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;YAAM;cAAArF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,KAAC,EAACsG,GAAG,CAACnB,IAAI;UAAA,GADhD/F,CAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNf,OAAA;UAAK2G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B5G,OAAA;YACEI,IAAI,EAAC,MAAM;YACXyG,KAAK,EAAEtE,MAAO;YACduE,QAAQ,EAAEC,CAAC,IAAIvE,SAAS,CAACuE,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;YACzCS,WAAW,EAAC,oBAAoB;YAChCF,QAAQ,EAAE3E,OAAQ;YAClB8E,SAAS,EAAER,CAAC,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,IAAIxB,UAAU,CAAC;UAAE;YAAApF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACFf,OAAA;YAAQmH,OAAO,EAAEnB,UAAW;YAACoB,QAAQ,EAAE3E,OAAO,IAAI,CAACF,MAAM,CAACuC,IAAI,CAAC,CAAE;YAAA8B,QAAA,EAAC;UAAI;YAAAhG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNf,OAAA;QAAK2G,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BnE,OAAO,iBAAIzC,OAAA;UAAK2G,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAW;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAAC,GAAC,eAClEf,OAAA;UAAKO,KAAK,EAAC,KAAK;UAACC,MAAM,EAAC,KAAK;UAAAoG,QAAA,EAC1B3E,eAAe,CAACwF,OAAO,CAAC,CAACC,OAAO,EAAEC,IAAI,KACrCD,OAAO,CAAClB,MAAM,CAAChD,GAAG,CAAC,CAACtD,KAAK,EAAEC,CAAC,KAAKF,WAAW,CAACC,KAAK,EAAE,GAAGyH,IAAI,IAAIxH,CAAC,EAAE,CAAC,CACrE;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL8B,cAAc,iBACb7C,OAAA;MAAK4H,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAExH,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEwH,UAAU,EAAE,iBAAiB;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAxB,QAAA,eAChM5G,OAAA;QAAK4H,KAAK,EAAE;UAAEI,UAAU,EAAE,MAAM;UAAEK,OAAO,EAAE,EAAE;UAAEC,YAAY,EAAE,EAAE;UAAEC,SAAS,EAAE,kBAAkB;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAA5B,QAAA,gBAC9G5G,OAAA;UAAK4H,KAAK,EAAE;YAAEa,YAAY,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAA9B,QAAA,EAAC;QAAY;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxEf,OAAA;UACEI,IAAI,EAAC,MAAM;UACXyG,KAAK,EAAE9D,UAAW;UAClB+D,QAAQ,EAAEC,CAAC,IAAI/D,aAAa,CAAC+D,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;UAC7CS,WAAW,EAAC,oBAAoB;UAChCM,KAAK,EAAE;YAAErH,KAAK,EAAE,MAAM;YAAE8H,OAAO,EAAE,CAAC;YAAEC,YAAY,EAAE,CAAC;YAAEK,MAAM,EAAE,gBAAgB;YAAEF,YAAY,EAAE;UAAG,CAAE;UAClGG,SAAS;QAAA;UAAAhI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFf,OAAA;UAAK4H,KAAK,EAAE;YAAEK,OAAO,EAAE,MAAM;YAAEY,GAAG,EAAE,EAAE;YAAEV,cAAc,EAAE;UAAW,CAAE;UAAAvB,QAAA,gBACnE5G,OAAA;YAAQ2G,SAAS,EAAC,mBAAmB;YAACQ,OAAO,EAAEtC,gBAAiB;YAACuC,QAAQ,EAAE,CAACrE,UAAU,CAAC+B,IAAI,CAAC,CAAE;YAAA8B,QAAA,EAAC;UAAI;YAAAhG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5Gf,OAAA;YAAQ2G,SAAS,EAAC,oBAAoB;YAACQ,OAAO,EAAEA,CAAA,KAAMrE,iBAAiB,CAAC,KAAK,CAAE;YAAA8D,QAAA,EAAC;UAAK;YAAAhG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACY,EAAA,CAtSuBD,GAAG;AAAAoH,EAAA,GAAHpH,GAAG;AAAA,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}